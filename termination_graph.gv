// http://www.graphviz.org/doc/info/attrs.html
digraph g{
  node [fontsize=11,fontname="Monospace"];
  edge [fontsize=11,fontname="Monospace"];
  // rankdir=LR
  // ratio=1.5
  _Exit                     [label="_Exit(int exit_code)",style="filled"];

  atexit_func               [label="User-specified\nexit handler(s)"];
  atexit                    [label="std::atexit()", style="filled", fillcolor=pink];

  set_terminate             [label="std::set_terminate()",style="filled",fillcolor=pink];
  terminate                 [label="std::terminate()",style="filled"];
  terminate_handler         [label="terminate_handler()"];
  terminateCause            [label="An exception is thrown\nand not caught;\n\nA noexcept specification\nis violated;\n\nUncaught exception\nduring the execution\nof a parallel\nalgorithm element\naccess [C++17];\n\n...",shape=box,style="rounded"];
  user_terminate_handler    [label="User-Specified\nTerminate Handler",shape=box,style="rounded"];

  mainReturn                [label="return from main();\n\nthe return value\nis the exit_code",shape=box,style="rounded"];
  Cleanup                   [label="Normal Program Termination:\ndestroys all static objects;\n flushes all buffers;\n closes all I/O channels",shape=box];
  destroyLocal              [label="Destroy local objects\nand unwind stack.", shape=box];
  exit                      [label="std::exit(int exit_code)",style="filled"];

  quick_exit                [label="std::quick_exit()",style="filled"];
  at_quick_exit_func        [label="User-specified\nquick_exit handler(s)"];
  at_quick_exit             [label="std::at_quick_exit()", style="filled", fillcolor=pink];

  unexpected                [label="std::unexpected()\n[REMOVED IN C++17]", style="filled", fillcolor=gray96, color=gray, fontcolor=gray26];
  unexpected_handler        [label="std::unexpected_handler()\n[REMOVED IN C++17']", fillcolor=gray96, color=gray, fontcolor=gray26];
  unexpectedCause           [label="A dynamic exception\nspecification is violated\n[REMOVED IN C++17]",shape=box,style="rounded", fillcolor=gray96, color=gray, fontcolor=gray26];
  user_unexpected_handler   [label="User-specified\nUnexpected Handler\n[REMOVED IN C++17]",shape=box,style="rounded", fillcolor=gray96, color=gray, fontcolor=gray26];
  set_unexpected            [label="std::set_unexpected()\n[REMOVED IN C++17]", style="filled", fillcolor=lightpink, color=gray, fontcolor=gray26];

  abort                     [label="std::abort()",style="filled"];

  raise                     [label="std::raise(SIGABRT)",style="filled"];
  signal                    [label="std::signal(SIGABRT)", style="filled", fillcolor=pink];
  user_signal_handler       [label="User-specified\nsignal handler\nfor SIGABRT",shape=box,style="rounded"];

  _exit                     [label="_exit(int status)\n[POSIX-specific,\nsame as _Exit()]",style="filled",fillcolor=gray94,color=gray,fontcolor=gray44];
  __fastfail                [label="__fastfail(FAST_FAIL_*)\n[Microsoft-specific]",style="filled",fillcolor=gray94, color=gray,fontcolor=gray44];

  PROGRAM                   [shape=circle];
  END                       [shape=doublecircle];

  /////////////////////////////////////////////////////////////////////////////

  PROGRAM -> __fastfail [label="calls\n[Microsoft-specific]", color=gray, fontcolor=gray44];
  PROGRAM -> _Exit [label="calls"];
  PROGRAM -> _exit [label="calls\n[POSIX-specific]", color=gray, fontcolor=gray44];
  __fastfail -> END [color=gray];
  // _exit -> END [color=gray];
  _exit -> _Exit [label="is same as",color=gray, fontcolor=gray44];
  _Exit -> END;

  PROGRAM -> mainReturn [color=darkorange style=bold];
  mainReturn -> destroyLocal [color=darkorange style=bold];
  destroyLocal -> exit [color=darkorange style=bold];

  PROGRAM -> exit [label="calls"];
  exit -> Cleanup [color=darkorange style=bold];
  Cleanup -> atexit_func[color=darkorange style=bold];
  atexit -> atexit_func [label="registers", color=pink, fontcolor=hotpink];
  atexit_func -> atexit_func [label="in reverse\norder"];
  atexit_func -> terminate [label="if func throws"];
  atexit_func -> END [label=otherwise color=darkorange style=bold];

  PROGRAM -> quick_exit [label="calls"];
  at_quick_exit -> at_quick_exit_func [label="registers", color=pink, fontcolor=hotpink];
  quick_exit-> at_quick_exit_func;
  at_quick_exit_func -> at_quick_exit_func [label="in reverse\norder"];
  at_quick_exit_func -> terminate [label="if func throws"];
  at_quick_exit_func -> _Exit

  PROGRAM -> terminateCause;
  PROGRAM -> terminate [label="calls"];
  terminate -> terminate_handler;
  terminate_handler -> abort;
  terminate_handler -> user_terminate_handler [style=dotted, label="if user-specified"];
  set_terminate -> terminate_handler [label="sets", color=pink, fontcolor=hotpink];
  terminateCause -> terminate;
  user_terminate_handler -> END [style=dashed];

  PROGRAM -> abort [label="calls"];
  abort -> END;

  PROGRAM -> unexpectedCause [color=gray76];
  PROGRAM -> unexpected [label="calls", color=gray76, fontcolor=gray26];
  unexpectedCause -> unexpected [color=gray76];
  unexpected -> unexpected_handler [color=gray76];
  unexpected_handler -> terminate [label="default or if\nunexpected_handler\nthrows", color=gray76, fontcolor=gray26];
  unexpected_handler -> user_unexpected_handler [style=dotted, color=gray76];
  set_unexpected -> unexpected_handler [label="sets", color=pink, fontcolor=hotpink];
  user_unexpected_handler -> END [style=dashed, color=gray76];

  PROGRAM -> raise [label="calls"];
  raise -> user_signal_handler;
  signal -> user_signal_handler [label="sets", color=pink, fontcolor=hotpink];
  abort -> user_signal_handler [style=dotted, label="if user-specified"];
  user_signal_handler -> END [style=dashed];

  // invisibles
  // terminate -> abort [style="invis"];

  /////////////////////////////////////////////////////////////////////////////

  {rank=source; PROGRAM};

  {rank=same; mainReturn terminateCause unexpectedCause};

  {rank=same; at_quick_exit quick_exit};

  {rank=same; at_quick_exit_func unexpected __fastfail};

  {rank=same; atexit set_unexpected};
  // {rank=same; exit _Exit};

  // {rank=same; at_quick_exit at_quick_exit_func};
  // {rank=same; set_terminate terminate_handler};
  // {rank=same; set_unexpected unexpected_handler};
  // {rank=same; atexit atexit_func};
  // {rank=same; signal user_signal_handler};

  // {rank=same; quick_exit raise exit terminate unexpected abort _Exit __fastfail};
  // {rank=same; _Exit _exit __fastfail};
  // {rank=same; _Exit _exit};
  // {rank=same; __fastfail _exit};
  {rank=same; raise signal};
  // {rank=same; __fastfail _exit END};

  {rank=same; user_unexpected_handler user_terminate_handler user_signal_handler};

  // {rank=same; __fastfail END};

  {rank=sink; END};
}

